raw expr       : and(true::Boolean, false::Boolean)
type           : Boolean
property       : {not_null}
checked expr   : and<Boolean, Boolean>(true::Boolean{not_null}, false::Boolean{not_null})
evaluation result:
false


raw expr       : and(NULL, false::Boolean)
type           : Nullable(Nothing)
property       : {}
checked expr   : and<Nullable(Nothing), Nullable(Boolean)>(NULL{}, cast<dest_type=Nullable(Boolean)>(false::Boolean){not_null})
evaluation result:
NULL


raw expr       : plus(ColumnRef(0)::Nullable(UInt8){}, -10::Int8)
type           : Nullable(Int16)
property       : {}
checked expr   : plus<Nullable(Int16), Nullable(Int16)>(cast<dest_type=Nullable(Int16)>(ColumnRef(0)){}, cast<dest_type=Nullable(Int16)>(-10::Int8){not_null})
input chunk:
+----------+
| Column 0 |
+----------+
| NULL     |
| 11       |
| NULL     |
+----------+
input chunk (internal):
+-----------+------------------------------------------------------------------+
| Column ID | Column Data                                                      |
+-----------+------------------------------------------------------------------+
| 0         | Nullable { column: UInt8([10, 11, 12]), validity: [0b_____010] } |
+-----------+------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| NULL     |
| 1        |
| NULL     |
+----------+
evaluation result (internal):
+-----------+---------------------------------------------------------------+
| Column ID | Column Data                                                   |
+-----------+---------------------------------------------------------------+
| 0         | Nullable { column: Int16([0, 1, 2]), validity: [0b_____010] } |
+-----------+---------------------------------------------------------------+


raw expr       : plus(ColumnRef(0)::Nullable(UInt8){}, ColumnRef(1)::Nullable(UInt8){})
type           : Nullable(Int16)
property       : {}
checked expr   : plus<Nullable(Int16), Nullable(Int16)>(cast<dest_type=Nullable(Int16)>(ColumnRef(0)){}, cast<dest_type=Nullable(Int16)>(ColumnRef(1)){})
input chunk:
+----------+----------+
| Column 0 | Column 1 |
+----------+----------+
| NULL     | NULL     |
| 11       | 2        |
| NULL     | 3        |
+----------+----------+
input chunk (internal):
+-----------+------------------------------------------------------------------+
| Column ID | Column Data                                                      |
+-----------+------------------------------------------------------------------+
| 0         | Nullable { column: UInt8([10, 11, 12]), validity: [0b_____010] } |
| 1         | Nullable { column: UInt8([1, 2, 3]), validity: [0b_____110] }    |
+-----------+------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| NULL     |
| 13       |
| NULL     |
+----------+
evaluation result (internal):
+-----------+------------------------------------------------------------------+
| Column ID | Column Data                                                      |
+-----------+------------------------------------------------------------------+
| 0         | Nullable { column: Int16([11, 13, 15]), validity: [0b_____010] } |
+-----------+------------------------------------------------------------------+


raw expr       : plus(ColumnRef(0)::Nullable(UInt8){}, ColumnRef(1)::Nullable(Nothing){})
type           : Nullable(Nothing)
property       : {}
checked expr   : plus<Nullable(Int16), Nullable(Nothing)>(cast<dest_type=Nullable(Int16)>(ColumnRef(0)){}, ColumnRef(1){})
input chunk:
+----------+----------+
| Column 0 | Column 1 |
+----------+----------+
| NULL     | NULL     |
| 11       | NULL     |
| NULL     | NULL     |
+----------+----------+
input chunk (internal):
+-----------+------------------------------------------------------------------+
| Column ID | Column Data                                                      |
+-----------+------------------------------------------------------------------+
| 0         | Nullable { column: UInt8([10, 11, 12]), validity: [0b_____010] } |
| 1         | Null { len: 3 }                                                  |
+-----------+------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| NULL     |
| NULL     |
| NULL     |
+----------+
evaluation result (internal):
+-----------+-----------------+
| Column ID | Column Data     |
+-----------+-----------------+
| 0         | Null { len: 3 } |
+-----------+-----------------+


raw expr       : not(ColumnRef(0)::Nullable(Boolean){})
type           : Nullable(Boolean)
property       : {}
checked expr   : not<Nullable(Boolean)>(ColumnRef(0){})
input chunk:
+----------+
| Column 0 |
+----------+
| NULL     |
| false    |
| NULL     |
+----------+
input chunk (internal):
+-----------+--------------------------------------------------------------------+
| Column ID | Column Data                                                        |
+-----------+--------------------------------------------------------------------+
| 0         | Nullable { column: Boolean([0b_____101]), validity: [0b_____010] } |
+-----------+--------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| NULL     |
| true     |
| NULL     |
+----------+
evaluation result (internal):
+-----------+--------------------------------------------------------------------+
| Column ID | Column Data                                                        |
+-----------+--------------------------------------------------------------------+
| 0         | Nullable { column: Boolean([0b_____010]), validity: [0b_____010] } |
+-----------+--------------------------------------------------------------------+


raw expr       : not(ColumnRef(0)::Nullable(Nothing){})
type           : Nullable(Nothing)
property       : {}
checked expr   : not<Nullable(Nothing)>(ColumnRef(0){})
input chunk:
+----------+
| Column 0 |
+----------+
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
+----------+
input chunk (internal):
+-----------+------------------+
| Column ID | Column Data      |
+-----------+------------------+
| 0         | Null { len: 10 } |
+-----------+------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
| NULL     |
+----------+
evaluation result (internal):
+-----------+------------------+
| Column ID | Column Data      |
+-----------+------------------+
| 0         | Null { len: 10 } |
+-----------+------------------+


raw expr       : least(10::UInt8, 20::UInt8, 30::UInt8, 40::UInt8)
type           : Int16
property       : {not_null}
checked expr   : least<Int16, Int16, Int16, Int16>(cast<dest_type=Int16>(10::UInt8){not_null}, cast<dest_type=Int16>(20::UInt8){not_null}, cast<dest_type=Int16>(30::UInt8){not_null}, cast<dest_type=Int16>(40::UInt8){not_null})
evaluation result:
10


raw expr       : create_tuple(NULL, true::Boolean)
type           : (Nullable(Nothing), Boolean)
property       : {not_null}
checked expr   : create_tuple<Nullable(Nothing), Boolean>(NULL{}, true::Boolean{not_null})
evaluation result:
(NULL, true)


raw expr       : get_tuple(1)(create_tuple(ColumnRef(0)::Int16{not_null}, ColumnRef(1)::Nullable(String){}))
type           : Nullable(String)
property       : {not_null}
checked expr   : get_tuple<(Int16, Nullable(String))>(create_tuple<Int16, Nullable(String)>(ColumnRef(0){not_null}, ColumnRef(1){}){not_null})
input chunk:
+----------+----------+
| Column 0 | Column 1 |
+----------+----------+
| 0        | a        |
| 1        | b        |
| 2        | NULL     |
| 3        | NULL     |
| 4        | NULL     |
+----------+----------+
input chunk (internal):
+-----------+-------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                       |
+-----------+-------------------------------------------------------------------------------------------------------------------+
| 0         | Int16([0, 1, 2, 3, 4])                                                                                            |
| 1         | Nullable { column: String { data: [97, 98, 99, 100, 101], offsets: [0, 1, 2, 3, 4, 5] }, validity: [0b___00011] } |
+-----------+-------------------------------------------------------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| a        |
| b        |
| NULL     |
| NULL     |
| NULL     |
+----------+
evaluation result (internal):
+-----------+-------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                       |
+-----------+-------------------------------------------------------------------------------------------------------------------+
| 0         | Nullable { column: String { data: [97, 98, 99, 100, 101], offsets: [0, 1, 2, 3, 4, 5] }, validity: [0b___00011] } |
+-----------+-------------------------------------------------------------------------------------------------------------------+


raw expr       : get_tuple(1)(ColumnRef(0)::Nullable((Boolean, String)){})
type           : Nullable(String)
property       : {}
checked expr   : get_tuple<Nullable((Boolean, String))>(ColumnRef(0){})
input chunk:
+------------+
| Column 0   |
+------------+
| (false, a) |
| (false, b) |
| NULL       |
| NULL       |
| NULL       |
+------------+
input chunk (internal):
+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                                                                          |
+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | Nullable { column: Tuple { fields: [Boolean([0b___00000]), String { data: [97, 98, 99, 100, 101], offsets: [0, 1, 2, 3, 4, 5] }], len: 5 }, validity: [0b___00011] } |
+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| a        |
| b        |
| NULL     |
| NULL     |
| NULL     |
+----------+
evaluation result (internal):
+-----------+-------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                       |
+-----------+-------------------------------------------------------------------------------------------------------------------+
| 0         | Nullable { column: String { data: [97, 98, 99, 100, 101], offsets: [0, 1, 2, 3, 4, 5] }, validity: [0b___00011] } |
+-----------+-------------------------------------------------------------------------------------------------------------------+


raw expr       : create_array()
type           : Array(Nothing)
property       : {not_null}
checked expr   : create_array<>()
evaluation result:
[]


raw expr       : create_array(NULL, true::Boolean)
type           : Array(Nullable(Boolean))
property       : {not_null}
checked expr   : create_array<T0=Nullable(Boolean)><T0, T0>(cast<dest_type=Nullable(Boolean)>(NULL){}, cast<dest_type=Nullable(Boolean)>(true::Boolean){not_null})
evaluation result:
[NULL, true]


raw expr       : create_array(ColumnRef(0)::Int16{not_null}, ColumnRef(1)::Int16{not_null})
type           : Array(Int16)
property       : {not_null}
checked expr   : create_array<T0=Int16><T0, T0>(ColumnRef(0){not_null}, ColumnRef(1){not_null})
input chunk:
+----------+----------+
| Column 0 | Column 1 |
+----------+----------+
| 0        | 5        |
| 1        | 6        |
| 2        | 7        |
| 3        | 8        |
| 4        | 9        |
+----------+----------+
input chunk (internal):
+-----------+------------------------+
| Column ID | Column Data            |
+-----------+------------------------+
| 0         | Int16([0, 1, 2, 3, 4]) |
| 1         | Int16([5, 6, 7, 8, 9]) |
+-----------+------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| [0, 5]   |
| [1, 6]   |
| [2, 7]   |
| [3, 8]   |
| [4, 9]   |
+----------+
evaluation result (internal):
+-----------+--------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                          |
+-----------+--------------------------------------------------------------------------------------+
| 0         | Array { array: Int16([0, 5, 1, 6, 2, 7, 3, 8, 4, 9]), offsets: [0, 2, 4, 6, 8, 10] } |
+-----------+--------------------------------------------------------------------------------------+


raw expr       : create_array(create_array(ColumnRef(0)::Int16{not_null}, ColumnRef(1)::Int16{not_null}), NULL, NULL)
type           : Array(Nullable(Array(Int16)))
property       : {not_null}
checked expr   : create_array<T0=Nullable(Array(Int16))><T0, T0, T0>(cast<dest_type=Nullable(Array(Int16))>(create_array<T0=Int16><T0, T0>(ColumnRef(0){not_null}, ColumnRef(1){not_null})){not_null}, cast<dest_type=Nullable(Array(Int16))>(NULL){}, cast<dest_type=Nullable(Array(Int16))>(NULL){})
input chunk:
+----------+----------+
| Column 0 | Column 1 |
+----------+----------+
| 0        | 5        |
| 1        | 6        |
| 2        | 7        |
| 3        | 8        |
| 4        | 9        |
+----------+----------+
input chunk (internal):
+-----------+------------------------+
| Column ID | Column Data            |
+-----------+------------------------+
| 0         | Int16([0, 1, 2, 3, 4]) |
| 1         | Int16([5, 6, 7, 8, 9]) |
+-----------+------------------------+
evaluation result:
+----------------------+
| Column 0             |
+----------------------+
| [[0, 5], NULL, NULL] |
| [[1, 6], NULL, NULL] |
| [[2, 7], NULL, NULL] |
| [[3, 8], NULL, NULL] |
| [[4, 9], NULL, NULL] |
+----------------------+
evaluation result (internal):
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                                                                                                                                   |
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | Array { array: Nullable { column: Array { array: Int16([0, 5, 1, 6, 2, 7, 3, 8, 4, 9]), offsets: [0, 2, 2, 2, 4, 4, 4, 6, 6, 6, 8, 8, 8, 10, 10, 10] }, validity: [0b01001001, 0b_0010010] }, offsets: [0, 3, 6, 9, 12, 15] } |
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


raw expr       : get(ColumnRef(0)::Array(Int16){not_null}, ColumnRef(1)::UInt8{not_null})
type           : Int16
property       : {not_null}
checked expr   : get<T0=Int16><Array(T0), Int16>(ColumnRef(0){not_null}, cast<dest_type=Int16>(ColumnRef(1)){not_null})
input chunk:
+----------------------------------------------------------------------------------+----------+
| Column 0                                                                         | Column 1 |
+----------------------------------------------------------------------------------+----------+
| [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]           | 0        |
| [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39] | 1        |
| [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59] | 2        |
| [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79] | 3        |
| [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99] | 4        |
+----------------------------------------------------------------------------------+----------+
input chunk (internal):
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | Array { array: Int16([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), offsets: [0, 20, 40, 60, 80, 100] } |
| 1         | UInt8([0, 1, 2, 3, 4])                                                                                                                                                                                                                                                                                                                                                                                                                                            |
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
evaluation result:
+----------+
| Column 0 |
+----------+
| 0        |
| 21       |
| 42       |
| 63       |
| 84       |
+----------+
evaluation result (internal):
+-----------+----------------------------+
| Column ID | Column Data                |
+-----------+----------------------------+
| 0         | Int16([0, 21, 42, 63, 84]) |
+-----------+----------------------------+


raw expr       : get(ColumnRef(0)::Array(Array(Int16)){not_null}, ColumnRef(1)::UInt8{not_null})
type           : Array(Int16)
property       : {not_null}
checked expr   : get<T0=Array(Int16)><Array(T0), Int16>(ColumnRef(0){not_null}, cast<dest_type=Int16>(ColumnRef(1)){not_null})
input chunk:
+----------------------------------------------------------------------------------------------------------------+----------+
| Column 0                                                                                                       | Column 1 |
+----------------------------------------------------------------------------------------------------------------+----------+
| [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]]                                 | 0        |
| [[20, 21, 22, 23, 24], [25, 26, 27, 28, 29], [30, 31, 32, 33, 34], [35, 36, 37, 38, 39]]                       | 1        |
| [[40, 41, 42, 43, 44], [45, 46, 47, 48, 49], [50, 51, 52, 53, 54]]                                             | 2        |
| [[55, 56, 57, 58, 59], [60, 61, 62, 63, 64], [65, 66, 67, 68, 69], [70, 71, 72, 73, 74]]                       | 3        |
| [[75, 76, 77, 78, 79], [80, 81, 82, 83, 84], [85, 86, 87, 88, 89], [90, 91, 92, 93, 94], [95, 96, 97, 98, 99]] | 4        |
+----------------------------------------------------------------------------------------------------------------+----------+
input chunk (internal):

| Column ID | Column Data|
+-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | Array { array: Array { array: Int16([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), offsets: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100] }, offsets: [0, 4, 8, 11, 15, 20] } |
| 1         | UInt|

evaluation result:
+----------------------+
| Column 0             |
+----------------------+
| [0, 1, 2, 3, 4]      |
| [25, 26, 27, 28, 29] |
| [50, 51, 52, 53, 54] |
| [70, 71, 72, 73, 74] |
| [95, 96, 97, 98, 99] |
+----------------------+
evaluation result (internal):
+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Column Data                                                                                                                                              |
+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | Array { array: Int16([0, 1, 2, 3, 4, 25, 26, 27, 28, 29, 50, 51, 52, 53, 54, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99]), offsets: [0, 5, 10, 15, 20, 25] } |
+-----------+----------------------------------------------------------------------------------------------------------------------------------------------------------+


