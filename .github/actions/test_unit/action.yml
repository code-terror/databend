name: "Test Unite"
description: "Running unit tests"
inputs:
  codecov_token:
    description: "CodeCov Token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Build Tool
      uses: ./.github/actions/setup_build_tool
      with:
        bypass_env_vars: RUSTFLAGS,RUSTDOCFLAGS,RUST_TEST_THREADS,RUST_LOG,RUST_BACKTRACE

    - shell: bash
      run: cargo -Z sparse-registry test --no-fail-fast
      env:
        RUST_TEST_THREADS: "2"
        RUST_LOG: ERROR
        RUST_BACKTRACE: full
        # RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests --cfg tokio_unstable'
        # RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'

    # Temporarily disable test coverage checks to save CI resources.
    # The main purpose is to avoid OOM due to build for specific target.
    #
    # Instructions
    # - `uncomment/enable`: If we self-host the CI or split the repo (especially, common-functions) to a finer granularity.
    # - `remove`: If we lack the need for test coverage, or adopt a new solution.

    # - name: Install grcov
    #   uses: actions-rs/cargo@v1
    #   with:
    #     command: install
    #     args: grcov

    # - name: Run code coverage
    #   uses: actions-rs/grcov@v0.1.5
    #   id: coverage

    # - name: Upload to codecov.io
    #   uses: codecov/codecov-action@v1
    #   with:
    #     token: ${{ inputs.codecov_token }}
    #     file: ${{ steps.coverage.outputs.report }}

    - name: Upload failure
      if: failure()
      uses: ./.github/actions/artifact_failure
      with:
        name: test-unit
