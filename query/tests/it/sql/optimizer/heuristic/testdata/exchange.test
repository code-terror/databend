select * from numbers(1) t, numbers(2) t1 where t.number = t1.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t1.number (#1)], probe keys: [t.number (#0)], join filters: []
        Exchange(Hash): keys: [t.number (#0)]
            Scan: default.system.numbers
        Exchange(Hash): keys: [t1.number (#1)]
            Scan: default.system.numbers


# Result of t1 join t is distributed on t.number
select * from numbers(1) t, numbers(2) t1, numbers(3) t2 where t.number = t1.number and t.number = t2.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t2.number (#2)], probe keys: [t.number (#0)], join filters: []
        HashJoin: INNER, build keys: [t1.number (#1)], probe keys: [t.number (#0)], join filters: []
            Exchange(Hash): keys: [t.number (#0)]
                Scan: default.system.numbers
            Exchange(Hash): keys: [t1.number (#1)]
                Scan: default.system.numbers
        Exchange(Hash): keys: [t2.number (#2)]
            Scan: default.system.numbers


select * from (select number as a, number+1 as b from numbers(1)) t, numbers(2) t1, numbers(3) t2 where a = t1.number and b = t2.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t2.number (#4)], probe keys: [t.b (#1)], join filters: []
        Exchange(Hash): keys: [t.b (#1)]
            HashJoin: INNER, build keys: [t1.number (#3)], probe keys: [t.a (#0)], join filters: []
                Exchange(Hash): keys: [t.a (#0)]
                    EvalScalar: [+(numbers.number (#0), 1)]
                        Scan: default.system.numbers
                Exchange(Hash): keys: [t1.number (#3)]
                    Scan: default.system.numbers
        Exchange(Hash): keys: [t2.number (#4)]
            Scan: default.system.numbers


select * from (select sum(number) as number from numbers(1) group by number) t, numbers(2) t1 where t.number = t1.number
----
Exchange(Merge)
    HashJoin: INNER, build keys: [t1.number (#4)], probe keys: [t.number (#1)], join filters: []
        Exchange(Hash): keys: [t.number (#1)]
            Project: [number (#1)]
                EvalScalar: [sum(number) (#3)]
                    Aggregate(Final): group items: [numbers.number (#0)], aggregate functions: [sum(number)]
                        Aggregate(Partial): group items: [numbers.number (#0)], aggregate functions: [sum(number)]
                            Exchange(Hash): keys: [numbers.number (#0)]
                                Scan: default.system.numbers
        Exchange(Hash): keys: [t1.number (#4)]
            Scan: default.system.numbers


