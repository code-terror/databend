select * from numbers(1)
----
Scan: default.system.numbers


select * from (select * from numbers(1)) as t1 where number = 1
----
Filter: [t1.number (#0) = 1]
    Scan: default.system.numbers


# `b = 1` can not be pushed down
select * from (select number as a, number + 1 as b from numbers(1)) as t1 where a = 1 and b = 1
----
Filter: [t1.a (#0) = 1, t1.b (#1) = 1]
    EvalScalar: [+(numbers.number (#0), 1)]
        Scan: default.system.numbers


select * from (select number as a, number + 1 as b from numbers(1)) as t1 where a = 1
----
EvalScalar: [+(numbers.number (#0), 1)]
    Filter: [t1.a (#0) = 1]
        Scan: default.system.numbers


select * from numbers(1) where number = pow(1, 1 + 1)
----
Filter: [numbers.number (#0) = 1]
    Scan: default.system.numbers


select * from numbers(1) where TRUE and 1 = 1
----
Scan: default.system.numbers


select * from numbers(1) where number = 0 and false
----
Filter: [false]
    Scan: default.system.numbers


select * from numbers(1) where number = 0 and null
----
Filter: [false]
    Scan: default.system.numbers


# If there is only one conjunction and the value is null, then we won't rewrite it
select * from numbers(1) where null
----
Filter: [NULL]
    Scan: default.system.numbers


select a from (select number as a, number as b from numbers(1))
----
Scan: default.system.numbers


select a from (select number as a, number+1 as b from numbers(1))
----
Project: [number (#0)]
    EvalScalar: [+(numbers.number (#0), 1)]
        Scan: default.system.numbers


