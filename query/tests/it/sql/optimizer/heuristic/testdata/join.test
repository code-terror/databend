# Transform cross join into inner join
select t.number from numbers(1) as t, numbers(1) as t1 where t.number = t1.number
----
Project: [number]
    HashJoin: INNER, build keys: [t1.number], probe keys: [t.number], join filters: []
        Scan: default.system.numbers
        Scan: default.system.numbers


select t.number from numbers(1) as t, numbers(1) as t1 where t.number = t1.number and t.number = t1.number + 1
----
Project: [number]
    HashJoin: INNER, build keys: [t1.number, +(t1.number, 1)], probe keys: [t.number, t.number], join filters: []
        Scan: default.system.numbers
        Scan: default.system.numbers


# Push predicates down through join
select t.number from numbers(1) as t, numbers(1) as t1 where t.number > 1 and 1 < t1.number
----
Project: [number]
    CrossJoin
        Filter: [t.number > 1]
            Scan: default.system.numbers
        Filter: [1 < t1.number]
            Scan: default.system.numbers


select t.number from numbers(1) as t, numbers(1) as t1 where t.number + t1.number = 1
----
Project: [number]
    Filter: [+(t.number, t1.number) = 1]
        CrossJoin
            Scan: default.system.numbers
            Scan: default.system.numbers


# Incompatible join keys, cannot push into join
select t.number from numbers(1) as t, numbers(1) as t1 where t.number = cast(t1.number as string)
----
Project: [number]
    Filter: [t.number = CAST(t1.number AS VARCHAR)]
        CrossJoin
            Scan: default.system.numbers
            Scan: default.system.numbers


# Join multiple tables
select t.number from numbers(1) as t, numbers(1) as t1, numbers(1) as t2 where t1.number = t2.number and t.number = 1
----
Project: [number]
    HashJoin: INNER, build keys: [t2.number], probe keys: [t1.number], join filters: []
        CrossJoin
            Filter: [t.number = 1]
                Scan: default.system.numbers
            Scan: default.system.numbers
        Scan: default.system.numbers


