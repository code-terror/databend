# Prune unused columns from Project
select * from (select a from (select number as a, number + 1 as b from numbers(1)))
----
Project: [number (#0)]
    EvalScalar: [numbers.a (#0)]
        Project: [number (#0)]
            EvalScalar: [numbers.a (#0)]
                Project: [number (#0)]
                    EvalScalar: [numbers.number (#0)]
                        Scan: default.system.numbers


# Prune unused columns from Aggregate
select a from (select number as a, count(*) as b from numbers(1) group by a)
----
Project: [number (#0)]
    EvalScalar: [numbers.a (#0)]
        Project: [number (#0)]
            EvalScalar: [group_item (#0)]
                Aggregate(Initial): group items: [numbers.number (#0)], aggregate functions: []
                    EvalScalar: [numbers.number (#0)]
                        Scan: default.system.numbers


# Prune unused columns for simple plan nodes (Project, Filter, Aggregate...)
select a from (select number as a, number b, sum(number) as c, number as d, number as e from numbers(1) group by a, b, d, e) where b > 1 order by d limit 1
----
Limit: [1], Offset: [0]
    Project: [number (#0)]
        EvalScalar: [numbers.a (#0)]
            Sort: [number (#0) ASC]
                Filter: [numbers.b (#0) > 1]
                    Project: [number (#0)]
                        EvalScalar: [group_item (#0)]
                            Aggregate(Initial): group items: [numbers.number (#0), numbers.number (#0), numbers.number (#0), numbers.number (#0)], aggregate functions: []
                                EvalScalar: [numbers.number (#0), numbers.number (#0), numbers.number (#0), numbers.number (#0), numbers.number (#0)]
                                    Scan: default.system.numbers


# Prune unused columns for join plan nodes (LogicalInnerJoin ...)
select * from (select t1.a from (select number + 1 as a, number + 1 as b, number + 1 as c, number + 1 as d from numbers(1)) as t1, (select number + 1 as a, number + 1 as b, number + 1 as c from numbers(1)) as t2 where t1.b = t2.b and t1.c = 1)
----
Project: [a (#1)]
    EvalScalar: [t1.a (#1)]
        Project: [a (#1)]
            EvalScalar: [t1.a (#1)]
                Filter: [t1.b (#2) = t2.b (#11), t1.c (#3) = 1]
                    CrossJoin
                        Project: [a (#1),b (#2),c (#3)]
                            EvalScalar: [+(numbers.number (#0), 1), +(numbers.number (#0), 1), +(numbers.number (#0), 1)]
                                Scan: default.system.numbers
                        Project: [b (#11)]
                            EvalScalar: [+(numbers.number (#9), 1)]
                                Scan: default.system.numbers


# Prune unused columns for correlated query
select t1.a from (select number + 1 as a, number + 1 as b from numbers(1)) as t1 where t1.a = (select count(*) from (select t2.a, t3.a from (select number + 1 as a, number + 1 as b, number + 1 as c, number + 1 as d from numbers(1)) as t2, (select number + 1 as a, number + 1 as b, number + 1 as c from numbers(1)) as t3 where t2.b = t3.b and t2.c = 1))
----
Project: [a (#1)]
    EvalScalar: [t1.a (#1)]
        Filter: [t1.a (#1) = scalar_subquery_21 (#21)]
            HashJoin: SINGLE, build keys: [], probe keys: [], join filters: []
                Project: [a (#1)]
                    EvalScalar: [+(numbers.number (#0), 1)]
                        Scan: default.system.numbers
                Project: [COUNT(*) (#21)]
                    EvalScalar: [COUNT(*) (#22)]
                        Aggregate(Initial): group items: [], aggregate functions: [COUNT(*)]
                            Project: []
                                EvalScalar: []
                                    Filter: [t2.b (#7) = t3.b (#16), t2.c (#8) = 1]
                                        CrossJoin
                                            Project: [b (#7),c (#8)]
                                                EvalScalar: [+(numbers.number (#5), 1), +(numbers.number (#5), 1)]
                                                    Scan: default.system.numbers
                                            Project: [b (#16)]
                                                EvalScalar: [+(numbers.number (#14), 1)]
                                                    Scan: default.system.numbers


# Prune unused columns with order by
select name from system.functions order by example
----
Project: [name (#0)]
    EvalScalar: [functions.name (#0)]
        Sort: [example (#7) ASC]
            Scan: default.system.functions


