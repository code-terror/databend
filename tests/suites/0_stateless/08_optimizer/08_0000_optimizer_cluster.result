limit push down: push (limit 10) to projection
group by push down: push alias to group by
Projection: max((number + 1)) as c1:UInt64, ((number % 3) + 1) as c2:UInt16
  AggregatorFinal: groupBy=[[((number % 3) + 1)]], aggr=[[max((number + 1))]]
    RedistributeStage[expr: sipHash(_group_by_key)]
      AggregatorPartial: groupBy=[[((number % 3) + 1)]], aggr=[[max((number + 1))]]
        Expression: ((number % 3) + 1):UInt16, (number + 1):UInt64 (Before GroupBy)
          ReadDataSource: scan schema: [number:UInt64], statistics: [read_rows: 10000, read_bytes: 80000, partitions_scanned: 2, partitions_total: 2], push_downs: [projections: [0]]
projection push down: push (name and value) to read datasource
Projection: a:Int32
  Filter: (b > 10)
    ReadDataSource: scan schema: [a:Int32, b:Int32], statistics: [read_rows: 0, read_bytes: 0, partitions_scanned: 0, partitions_total: 0], push_downs: [projections: [0, 1], filters: [(b > 10)]]
